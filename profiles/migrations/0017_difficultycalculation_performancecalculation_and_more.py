# Generated by Django 4.2.3 on 2023-11-24 05:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("profiles", "0016_alter_userstats_extra_pp_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DifficultyCalculation",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("mods", models.IntegerField()),
                ("calculator_engine", models.CharField(max_length=50)),
                ("calculator_version", models.CharField(max_length=50)),
                (
                    "beatmap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="difficulty_calculations",
                        to="profiles.beatmap",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerformanceCalculation",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("calculator_engine", models.CharField(max_length=50)),
                ("calculator_version", models.CharField(max_length=50)),
                (
                    "difficulty_calculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_calculations",
                        to="profiles.difficultycalculation",
                    ),
                ),
                (
                    "score",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_calculations",
                        to="profiles.score",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DifficultyValue",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20)),
                ("value", models.FloatField()),
                (
                    "calculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="difficulty_values",
                        to="profiles.difficultycalculation",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["value"], name="profiles_di_value_6b1f33_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="PerformanceValue",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20)),
                ("value", models.FloatField()),
                (
                    "calculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_calculations",
                        to="profiles.performancecalculation",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["value"], name="profiles_pe_value_a6a611_idx")
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="performancevalue",
            constraint=models.UniqueConstraint(
                fields=("calculation_id", "name"), name="unique_performance_value"
            ),
        ),
        migrations.AddConstraint(
            model_name="performancecalculation",
            constraint=models.UniqueConstraint(
                fields=("score_id", "calculator_engine", "calculator_version"),
                name="unique_performance_calculation",
            ),
        ),
        migrations.AddConstraint(
            model_name="difficultyvalue",
            constraint=models.UniqueConstraint(
                fields=("calculation_id", "name"), name="unique_difficulty_value"
            ),
        ),
        migrations.AddConstraint(
            model_name="difficultycalculation",
            constraint=models.UniqueConstraint(
                fields=(
                    "beatmap_id",
                    "mods",
                    "calculator_engine",
                    "calculator_version",
                ),
                name="unique_difficulty_calculation",
            ),
        ),
    ]
