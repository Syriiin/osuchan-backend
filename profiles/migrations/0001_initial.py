# Generated by Django 2.2 on 2019-04-20 12:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Beatmap",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("set_id", models.IntegerField()),
                ("artist", models.CharField(max_length=200)),
                ("title", models.CharField(max_length=200)),
                ("difficulty_name", models.CharField(max_length=200)),
                ("gamemode", models.IntegerField()),
                ("status", models.IntegerField()),
                ("creator_name", models.CharField(max_length=30)),
                ("bpm", models.FloatField()),
                ("drain_time", models.IntegerField()),
                ("total_time", models.IntegerField()),
                ("max_combo", models.IntegerField(null=True)),
                ("circle_size", models.FloatField()),
                ("overall_difficulty", models.FloatField()),
                ("approach_rate", models.FloatField()),
                ("health_drain", models.FloatField()),
                ("star_rating", models.FloatField()),
                ("last_updated", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="OsuUser",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=30)),
                ("country", models.CharField(max_length=2)),
                ("join_date", models.DateTimeField()),
                ("disabled", models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name="UserStats",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gamemode", models.IntegerField()),
                ("playcount", models.IntegerField()),
                ("playtime", models.IntegerField()),
                ("level", models.FloatField()),
                ("ranked_score", models.BigIntegerField()),
                ("total_score", models.BigIntegerField()),
                ("rank", models.IntegerField()),
                ("country_rank", models.IntegerField()),
                ("pp", models.FloatField()),
                ("accuracy", models.FloatField()),
                ("count_300", models.IntegerField()),
                ("count_100", models.IntegerField()),
                ("count_50", models.IntegerField()),
                ("count_rank_ss", models.IntegerField()),
                ("count_rank_ssh", models.IntegerField()),
                ("count_rank_s", models.IntegerField()),
                ("count_rank_sh", models.IntegerField()),
                ("count_rank_a", models.IntegerField()),
                ("extra_pp", models.FloatField(null=True)),
                ("nochoke_pp", models.FloatField(null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stats",
                        to="profiles.OsuUser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Score",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                ("count_300", models.IntegerField()),
                ("count_100", models.IntegerField()),
                ("count_50", models.IntegerField()),
                ("count_miss", models.IntegerField()),
                ("count_geki", models.IntegerField()),
                ("count_katu", models.IntegerField()),
                ("best_combo", models.IntegerField()),
                ("perfect", models.BooleanField()),
                ("mods", models.IntegerField()),
                ("rank", models.CharField(max_length=3)),
                ("pp", models.FloatField()),
                ("date", models.DateTimeField()),
                ("nochoke_pp", models.FloatField(null=True)),
                ("result", models.IntegerField(null=True)),
                (
                    "beatmap",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="profiles.Beatmap",
                    ),
                ),
                (
                    "user_stats",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scores",
                        to="profiles.UserStats",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="beatmap",
            name="creator",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="beatmaps",
                to="profiles.OsuUser",
            ),
        ),
        migrations.AddIndex(
            model_name="userstats",
            index=models.Index(
                fields=["user", "gamemode"], name="profiles_us_user_id_ba88aa_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="userstats",
            constraint=models.UniqueConstraint(
                fields=("user_id", "gamemode"), name="unique_user_stats"
            ),
        ),
    ]
