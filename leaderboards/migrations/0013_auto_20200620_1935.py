# Generated by Django 3.0.7 on 2020-06-20 09:35

from django.db import migrations, models


def set_member_count(apps, schema_editor):
    Leaderboard = apps.get_model("leaderboards", "Leaderboard")

    leaderboards = Leaderboard.objects.exclude(access_type=0)
    for leaderboard in leaderboards:
        leaderboard.member_count = leaderboard.memberships.count()
        leaderboard.save()


def set_rank(apps, schema_editor):
    Membership = apps.get_model("leaderboards", "Membership")

    memberships = Membership.objects.all()
    for membership in memberships:
        membership.rank = (
            Membership.objects.filter(
                leaderboard_id=membership.leaderboard_id, pp__gt=membership.pp
            ).count()
            + 1
        )
        membership.save()


def set_score_count(apps, schema_editor):
    Membership = apps.get_model("leaderboards", "Membership")

    memberships = Membership.objects.all()
    for membership in memberships:
        membership.score_count = membership.scores.count()
        membership.save()


class Migration(migrations.Migration):
    dependencies = [
        ("leaderboards", "0012_auto_20200617_1918"),
    ]

    operations = [
        migrations.AddField(
            model_name="leaderboard",
            name="member_count",
            field=models.IntegerField(null=True),
        ),
        migrations.RunPython(set_member_count, migrations.RunPython.noop),
        migrations.AddField(
            model_name="membership",
            name="rank",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.RunPython(set_rank, migrations.RunPython.noop),
        migrations.AddField(
            model_name="membership",
            name="score_count",
            field=models.IntegerField(default=0),
            preserve_default=False,
        ),
        migrations.RunPython(set_score_count, migrations.RunPython.noop),
    ]
